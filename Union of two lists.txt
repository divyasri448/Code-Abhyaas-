c)Union of two lists

 #include <stdio.h>
int contains(int arr[], int size, int element) {
    for (int i = 0; i < size; i++) {
        if (arr[i] == element) {
            return 1;  
        }
    }
    return 0;  
}
int* computeUnion(int arr1[], int size1, int arr2[], int size2, int* unionSize) {
    int maxSize = size1 + size2;
    int* unionArr = malloc(maxSize * sizeof(int));
    int index = 0;

    for (int i = 0; i < size1; i++) {
        if (!contains(unionArr, index, arr1[i])) {
            unionArr[index++] = arr1[i];
        }
    }

    for (int i = 0; i < size2; i++) {
        if (!contains(unionArr, index, arr2[i])) {
            unionArr[index++] = arr2[i];
        }
    }

    *unionSize = index;
    return unionArr;
}

int main() {
    int arr1[] = {1, 2, 3, 4, 5};
    int size1 = sizeof(arr1) / sizeof(arr1[0]);

    int arr2[] = {4, 5, 6, 7, 8};
    int size2 = sizeof(arr2) / sizeof(arr2[0]);

    int unionSize;
    int* unionArr = computeUnion(arr1, size1, arr2, size2, &unionSize);

    printf("Union of arrays: ");
    for (int i = 0; i < unionSize; i++) {
        printf("%d ", unionArr[i]);
    }
    free(unionArr);  
    return 0;
}

output:
Union of arrays: 1 2 3 4 5 6 7 8
